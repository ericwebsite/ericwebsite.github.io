(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["edc18c7c16ba2ab4783967b05ef936bd"],{HYvl:function(e,r,t){"use strict";t("pNMO");t("4Brf");t("ma9I");t("TeQF");t("2B1R");t("+2oP");t("3KgV");t("5DmW");t("07d7");t("5s+n");t("FZtP");var a=n(t("lTCR"));var d=n(t("o1mU"));function n(e){return e&&e.__esModule?e:{default:e}}function p(r){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?arguments[e]:{};var a=Object.keys(t);if(typeof Object.getOwnPropertySymbols==="function"){a=a.concat(Object.getOwnPropertySymbols(t).filter(function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))}a.forEach(function(e){i(r,e,t[e])})}return r}function i(e,r,t){if(r in e){Object.defineProperty(e,r,{value:t,enumerable:true,configurable:true,writable:true})}else{e[r]=t}return e}function o(){var r=s(["\n    query getUserHoverCardProfileDeprecated($kaid: String!) {\n        user(kaid: $kaid) {\n            id\n            nickname\n            username\n            bio\n            avatar {\n                imageSrc\n            }\n            points\n            profileRoot\n            publicBadges {\n                description\n                icons {\n                    smallUrl\n                }\n            }\n            isActivityAccessible\n            isPhantom\n            isPublic\n        }\n    }\n"]);o=function e(){return r};return r}function s(e,r){if(!r){r=e.slice(0)}return Object.freeze(Object.defineProperties(e,{raw:{value:Object.freeze(r)}}))}var v=t("e2gc");var g=t("1CEa");var c=t("bLWT");var i18n=t("HEOz");var b=(0,a.default)(o());var h={_link:function e(r,t){if(t!=null&&r.is("a")&&!r.attr("href")){var a="discussion";if(r.hasClass("profile-programs")){a="projects"}r.attr("href",t+a)}},canFitToRight:function e(r){var t=500;var a=v(window).width()-r.offset().left-r.width();return a>t},cleanupUserData:function e(r){return p({},r,{publicBadges:r.publicBadges||[],points:r.points||i18n._("?")})},createHoverCardQtip:function e(r,t){var n=this;var i=v(r);var a=i.data("user-kaid");var o=i.data("has-qtip");if(!a||o){return Promise.resolve()}var s=false;var c=!h.canFitToRight(i);var l=new g;var u=l.render().el.innerHTML;if(c){i.data("right-triangle",true);s={my:"top right",at:"bottom right"}}var f=(0,d.default)(b,{kaid:a},"cache-first").then(function(e){var r=e.data.user;if(!r){return}r=n.cleanupUserData(r);var t=r.publicBadges.map(function(e){var r=e.description,t=e.icons.smallUrl;return{description:r,icons:{small:t}}});var a=p({},r,{avatarSrc:r.avatar.imageSrc,publicBadges:t,includesUserDataInfo:true});h._onHoverCardDataLoaded(i,a)});i.data("has-qtip",true);i.qtip({content:{text:u},style:{classes:"custom-override"},hide:{delay:100,fixed:true},position:t||s||{my:"top left",at:"bottom left"}});i.qtip("show");if(c){v(".hover-card-triangle").addClass("right")}return f},_onHoverCardDataLoaded:function e(r,t){var a=new c(t);if(r.attr("href")){a.set({href:r.attr("href")})}if(r.hasClass("profile-programs")){a.set({href:a.get("profileRoot")+"projects"})}var n=new g({model:a});var i=n.render().el.innerHTML;r.qtip("option","content.text",i);var o=a.get("profileRoot");h._link(r,o);if(r.data("right-triangle")){v(".hover-card-triangle").addClass("right")}}};e.exports=h}}]);
//# sourceMappingURL=../../sourcemaps/en/edc18c7c16ba2ab4783967b05ef936bd.7719f2932f3dfa11533c.js.map